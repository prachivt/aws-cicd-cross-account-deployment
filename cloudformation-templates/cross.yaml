AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  CodeDeployRoleInThisAccount:
    Type: CommaDelimitedList
    Description: Names of existing Roles you want to add to the newly created Managed Policy
  
  DevelopmentAccCodePipelinKMSKeyARN:
    Type: String
    Description: ARN of the KMS key from the Development/Global Resource Account

  DevelopmentAccCodePipelineS3BucketARN:
    Type: String
    Description: ARN of the S3 Bucket used by CodePipeline in the Development/Global Resource Account
  
  DevelopmentAccNumber:
    Type: String
    Description: Account Number of the Development Resources Account
  

Resources:
  CrossAccountAccessRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Join [ ":", [ "arn","aws","iam:",!Ref DevelopmentAccNumber,"root" ] ]
              Service: 
                - codedeploy.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      
      Policies:
        - PolicyName: CrossAccountServiceAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:List*' 
                  - 's3:Get*'
                  - 's3:Describe*'
                Resource: '*'

              - Effect: Allow
                Action:
                  - 's3:*'
                Resource: !Ref DevelopmentAccCodePipelineS3BucketARN

              - Effect: Allow
                Action: 
                  - 'codedeploy:*'
                  - 'codebuild:*'
                  - 'sns:*'
                  - 'cloudwatch:*'
                  - 'codestar-notifications:*'
                  - 'chatbot:*'
                  - 'ecs:*'
                  - 'ecr:*'
                  - 'codedeploy:Batch*'
                  - 'codedeploy:Get*'
                  - 'codedeploy:List*'
                Resource: '*'


              - Effect: Allow
                Action:
                  - 'codedeploy:Batch*'
                  - 'codedeploy:Get*'
                  - 'codedeploy:List*'
                  - 'kms:*'
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'


              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
                Condition:
                  StringLike:
                    'iam:PassedToService': ecs-tasks.amazonaws.com

  KMSAccessPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowThisRoleToAccessKMSKeyFromOtherAccount
            Effect: Allow
            Action:
              - 'kms:DescribeKey'
              - 'kms:GenerateDataKey*'
              - 'kms:Encrypt'
              - 'kms:ReEncrypt*'
              - 'kms:Decrypt'
            Resource: !Ref DevelopmentAccCodePipelinKMSKeyARN 
      Roles: !Ref CodeDeployRoleInThisAccount

  S3BucketAccessPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowThisRoleToAccessS3inOtherAccount
            Effect: Allow
            Action:
              - 's3:Get*'
            Resource: !Ref DevelopmentAccCodePipelineS3BucketARN
            Effect: Allow
            Action:
              - 's3:ListBucket'
            Resource: !Ref DevelopmentAccCodePipelineS3BucketARN
      Roles: !Ref CodeDeployRoleInThisAccount
